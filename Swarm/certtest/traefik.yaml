version: '3.3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:latest
    hostname: 'traefik.mark-morley.co.uk'
    networks:
      - certtest-network
    deploy:
      mode: replicated
      replicas: 1
      # placement:
      #   constraints:
      #     # Make the traefik service run only on the node with this label
      #     # as the node with it has the volume for the certificates
      #     - node.labels.traefik-public.traefik-public-certificates == true

    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --api.insecure=true 
      - --providers.docker 
      - --providers.docker.swarmMode=true
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Create an entrypoint "https" listening on port 443
      - --entrypoints.https.address=:443
      # Add a constraint to only use services with the label "traefik.constraint-label=traefik-public"
      # - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.file.directory=/certificates

    labels:
      # Enable Traefik for this service, to make it available in the public network
        - traefik.enable=true
        # Use the traefik-public network (declared below)
        - traefik.docker.network=certtest-network
        # Use the custom label "traefik.constraint-label=traefik-public"
        # This public Traefik will only use services with this label
        # That way you can add other internal Traefik instances per stack if needed
        - traefik.constraint-label=traefik-public
      
    ports:
    # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      # Listen on port 443, default for HTTPS
      - 443:443
    # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount the volume to store the certificates
      - /home/sysadmin/docker-shared/user-volumes/traefik/traefik-public-certificates:/certificates



  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    hostname: 'whoami.mark-morley.co.uk'
    networks:
      - certtest-network
    deploy:
      labels:
        - "traefik.http.routers.whoami.rule=Host(`whoami.mark-morley.co.uk`)"    
        # Create a router called whoami listening on the websecure entrypoint
        - "traefik.http.routers.whoami.entrypoints=https"
        # Force TLS
        - "traefik.http.routers.whoami.tls=true"  
        # Send traffic to the container via port 8080
        - "traefik.http.services.whoami-service.loadbalancer.server.port=8080"

networks:
  certtest-network:
    driver: overlay
    attachable: true

